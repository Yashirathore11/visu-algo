{"version":3,"sources":["assets/github.svg","assets/sorting.svg","assets/pathfinding.svg","assets/searching.svg","assets/Coding.svg","assets/Launching.svg","assets/Y.jpg","components/Home.js","components/buttons-holder/btnholder.component.jsx","components/range-slider/range-slider.styles.jsx","components/range-slider/array-bar-range-slider/array-bar-range-slider.styles.jsx","components/range-slider/array-bar-range-slider/array-bar-range-slider.component.jsx","components/range-slider/animation-speed-range-slider/animation-speed-range-slider.styles.jsx","components/range-slider/animation-speed-range-slider/animation-speed-range-slider.component.jsx","components/range-slider/range-slider.component.jsx","components/array-bars-holder/array-bars-holder.component.js","components/Sorting/sort.styles.jsx","helper-functions.js","components/Sorting/algorithms/bubble-sort/bubble-sort-animation.js","components/Sorting/algorithms/bubble-sort/bubble-sort.js","components/Sorting/algorithms/insertion-sort/insertion-sort-animation.js","components/Sorting/algorithms/insertion-sort/insertion-sort.js","components/Sorting/algorithms/selection-sort/selection-sort-animation.js","components/Sorting/algorithms/selection-sort/selection-sort.js","components/Sorting/algorithms/merge-sort/merge-sort-animations.js","components/Sorting/algorithms/merge-sort/merge-sort.js","components/Sorting/algorithms/quick-sort/quick-sort.js","components/Sorting/sort.component.jsx","components/pathfindingVisualizer/Node.js","components/pathfindingVisualizer/algorithms/Dijkstra.js","components/pathfindingVisualizer/maze/randomMaze.js","components/Instructions/Instruct.js","assets/pathfinder.gif","components/pathfindingVisualizer/Pathfinding.js","components/search-buttons-holder/search-buttons-holder.component.jsx","components/Searching/search.styles.jsx","components/Searching/algorithms/linear-search.js","components/Searching/algorithms/binary-search.js","components/Searching/search.component.jsx","components/Cli/Cli.js","App.js","index.js"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGithub","_ref","svgRef","title","titleId","props","viewBox","xmlns","ref","id","d","ForwardRef","Home","useEffect","window","particlesJS","particleJSON","className","onClick","open","style","color","href","to","src","Sorting","height","Pathfinding","Searching","Coding","alt","Launching","BtnHolder","generateNewArray","bubbleSort","selectionSort","insertionSort","mergeSort","quickSort","RangeSliderComponent","styled","div","ItemComponent","ArrayBarRangeSliderComponent","TextComponent","p","ArrayBarSlider","withStyles","root","inlineSize","padding","thumb","width","backgroundColor","border","marginTop","marginLeft","active","track","borderRadius","rail","Slider","ArrayBarRangeSlider","min","max","step","defaultValue","numberOfArrayBars","valueLabelDisplay","onChange","onChangeArrayBarRangeSlider","AnimationSpeedRangeSliderComponent","AnimationSpeedSlider","AnimationSpeedRangeSlider","animationSpeed","onChangeAnimationSpeedRangeSlider","RangeSlider","ArrayBarsHolder","array","map","value","idx","transform","label","position","SortComponent","right_color_bar","document","getElementsByClassName","left_color_bar","front_color_bar","back_color_bar","bottom_color_bar","getBarStyle","index","changeBackgroundColor","styleOfElement","j","changeBoxShadow","shadow","boxShadow","swapBars","index1","index2","styleOfElement1","styleOfElement2","tempHeight","h1","parseInt","h2","resetBarStyleDefault","setTimeout","swap","temp","randomIntFromInterval","Math","floor","random","getBubbleSortAnimations","animations","push","BubbleSort","comparingElement1","comparingElement2","doSwap","isFinalElement","finalElement","promise1","Promise","resolve","_","promise2","all","getInsertionSortAnimation","tempValue","InsertionSort","firstElement","secondElement","sortedTill","getSelectionSortAnimation","minIdx","SelectionSort","getSelectionSortAnimations","currentElement","comparingElement","minIndexElement","mergeSortHelper","mainArray","startIdx","endIdx","auxiliaryArray","middleIdx","k","doMerge","getMergeSortAnimations","slice","MergeSort","makeAllBarsGreen","newHeight","SWAPPING_COLOR","SORTED_COLOR","SORTED_SHADOW","QuickSort","a","quickSortHelper","left","right","partition","pivot","pivotIdx","Sort","useState","setArray","numberOfElements","setNumberOfElements","setAnimationSpeed","newArray","Node","state","isWall","isStart","isEnd","isVisited","isShortestPath","onMouseDown","row","col","onMouseEnter","onMouseUp","onMouseLeave","cName","Component","isInsideGrid","grid","dijkstra","startNode","endNode","arr","visited_nodes","shortestPath","start_node","end_node","pq","PriorityQueue","comparator","b","distance","Infinity","prevNode","queue","dx","dy","cell","dequeue","flag","x","y","node","unshift","dist","abs","randomMaze","finishNode","walls","sort","makeGrid","animating","row_size","innerHeight","col_size","innerWidth","getElementById","start_x","start_y","end_x","end_y","setState","number_of_nodes","visited","handleMouseDown","mainClicked","mouseClicked","handleMouseEnter","handleMouseLeave","handleMouseUp","GridWithMaze","newGrid","wall","newNode","animateMaze","mazeSpeed","generateRandomMaze","e","preventDefault","generatingMaze","dijkshtra","Dijkstra","animate","animateVisited","requestAnimationFrame","animatePath","then","toggleChat","chatBody","display","showModal","hideModal","method","algo_info","text","url","addEventListener","class","type","exact","role","minWidth","textAlign","element","linearSearch","binarySearch","sortArray","placeholder","handleTargetChange","SearchComponent","LinearSearch","linearSearchHelper","alert","COMPAIRING_COLOR","REVERT_COLOR","BOUNDARY_COLOR","TARGET_COLOR","TARGET_SHADOW","BinarySearch","binarySearchHelper","low","high","mid","prevLow","prevHigh","Search","setTarget","dict","Set","val","has","add","event","Number","isSorted","Cli","t1","Terminal","date","Date","setTextColor","print","toDateString","toLocaleTimeString","input","command","handleCommand","callAlgorithms","callBubble","callSelection","callInsertion","callMerge","callQuick","callDjisktra","callLinear","callBinary","Fragment","App","basename","hashType","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.38d94f9a.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGithub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m256 0c-140.699219 0-256 116.300781-256 257 0 139.882812 114.25 255 256 255 141.574219 0 256-114.945312 256-255 0-140.699219-115.300781-257-256-257zm45 477.5c-14.398438 3-29.699219 4.5-45 4.5s-30.601562-1.5-45-4.5v-70.199219c0-16.800781 4.5-22.800781 10.5-30.902343 3.054688-3.492188 4.898438-6.625 18.597656-27.296876l-23.097656-3.601562c-59.402344-8.699219-82.800781-39.601562-92.101562-63.601562-12-32.097657-5.699219-72.300782 15.902343-97.796876 3.300781-3.902343 6-10.503906 3.601563-17.402343-4.503906-13.800781-3.902344-35.699219-.902344-44.101563 15.90625 2.273438 32.261719 13.667969 45.902344 21.902344 6.285156 3.667969 9.582031 2.699219 12.597656 3 10.960938-2.28125 28.058594-7.800781 54.300781-7.800781 16.199219 0 33.300781 2.398437 50.101563 7.199219 3.003906-.070313 7.832031 2.484374 16.199218-2.398438 14.257813-8.6875 30.058594-19.691406 45.898438-21.902344 3 8.402344 3.601562 30.300782-.898438 44.101563-2.402343 6.898437.296876 13.5 3.601563 17.402343 21.597656 25.5 27.898437 65.699219 15.898437 97.796876-9.300781 24-32.699218 54.902343-92.101562 63.601562l-23.097656 3.601562c14.160156 21.367188 15.652344 23.929688 18.601562 27.296876 5.996094 8.101562 10.496094 14.101562 10.496094 30.902343zm30-8.699219v-61.5c0-17.101562-3.601562-28.5-8.402344-36.902343 45.601563-12.296876 78.003906-39.300782 92.402344-78 15.300781-40.796876 8.402344-89.398438-17.101562-123 4.503906-20.097657 4.503906-52.199219-6.296876-67.199219-4.800781-6.597657-11.402343-10.199219-19.800781-10.199219-.300781 0-.300781 0-.300781 0-23.261719 1.257812-41.570312 12.972656-61.199219 24.898438-18-4.800782-36.300781-7.199219-54.601562-7.199219-18.597657 0-37.199219 2.699219-53.695313 7.199219-20.664062-12.460938-38.796875-23.671876-62.703125-24.898438-7.5 0-14.101562 3.601562-18.902343 10.199219-10.796876 15-10.796876 47.101562-6.296876 67.199219-25.503906 33.601562-32.402343 82.5-17.101562 123 14.398438 38.699218 46.800781 65.703124 92.402344 78-3.722656 6.511718-6.667969 14.914062-7.828125 26.285156-9.210938 3.175781-17.199219 4.210937-24.628907 2.027344-7.835937-2.316407-13.941406-7.546876-19.246093-16.46875-11.914063-20.015626-32.207031-36.355469-55.3125-34.230469l2.636719 29.882812c10.699218-.980469 21.347656 10.339844 26.878906 19.671875 9.125 15.367188 21.417968 25.445313 36.546875 29.914063 11.230469 3.308593 21.496093 3.230469 32.550781.871093v40.449219c-87.300781-30.601562-151-114-151-211.800781 0-124.199219 101.800781-227 226-227s226 102.800781 226 227c0 97.800781-63.699219 181.199219-151 211.800781zm0 0\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.3ba4a27c.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/sorting.658747f7.svg\";","export default __webpack_public_path__ + \"static/media/pathfinding.3739f21e.svg\";","export default __webpack_public_path__ + \"static/media/searching.9efa1e8b.svg\";","export default __webpack_public_path__ + \"static/media/Coding.621705d0.svg\";","export default __webpack_public_path__ + \"static/media/Launching.d80e85ea.svg\";","export default __webpack_public_path__ + \"static/media/Y.a82262b3.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport \"../styles/Home.css\"\r\nimport {ReactComponent as Github} from \"../assets/github.svg\";\r\nimport Sorting from \"../assets/sorting.svg\";\r\nimport Pathfinding from '../assets/pathfinding.svg';\r\nimport Searching from '../assets/searching.svg';\r\nimport Coding from '../assets/Coding.svg';\r\nimport Launching from '../assets/Launching.svg';\r\nimport Y from \"../assets/Y.jpg\";\r\nimport \"particles.js\";\r\nimport particleJSON from \"../assets/particles.json\";\r\nimport {Link} from \"react-router-dom\";\r\nconst Home = () => {\r\n    useEffect(() => {\r\n        window.particlesJS(\"particles-js\",particleJSON );\r\n      }, []);\r\nreturn(\r\n    <div className=\"backgroundHome\">\r\n        <div id=\"particles-js\"></div>\r\n        <div className=\"hometop\">\r\n            <div className=\"link\">\r\n                <div onClick={() => window.open(\"https://github.com/Yashirathore11/Visualgo\", \"_blank\")}>\r\n                    <Github/>\r\n                </div>\r\n\r\n                <h1 style={{\r\n                    color: \"#fff\",\r\n                }}>VISU<span\r\n                    style={{\r\n                        color:\r\n                            \"#2ed327\"\r\n                    }}>ALgo</span></h1>\r\n                <a href='#footer' style={{\r\n                    color: \"#fff\",\r\n                }}>About Us</a>\r\n            </div>\r\n\r\n            <div className={\"main-content\"}>\r\n                <div>\r\n                    <p>\r\n                        Algorithm visualization illustrates how algorithms work in a graphical way.\r\n                        It mainly aims to simplify and deepen the understanding of algorithms operation.\r\n                        We Introduce Visualgo for visualising data structures and algorithms through animation.\r\n                    </p>\r\n                    <Link to={\"/cli\"} className={\"btn btn-success\"}>Learn Algorithms</Link>\r\n                    {/*<a href=\"/Visualgo/cli\" className=\"btn btn-success\">Learn Algorithms</a>    */}\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\">\r\n                            <img src={Sorting} className=\"card-img-top\" height=\"157px\" />\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Sorting Techniques</h5>\r\n                                    <p className=\"card-text\">Implementing and visualizing various sorting algorithms to specify the way to arrange data in a particular order.</p>\r\n                                    <Link to={\"/sorting\"} className={\"btn btn-outline-success\"}>Proceed</Link>                                   \r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\">\r\n                            <img src={Pathfinding} className=\"card-img-top\" height=\"157px\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Pathfinding Techniques</h5>\r\n                                <p className=\"card-text\">Finding the shortest path for a given starting point and ending point by implementing various pathfinding algorithms.</p>\r\n                                <Link to={\"/pathfinding\"} className={\"btn btn-outline-success\"}>Proceed</Link>\r\n                           </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <div className=\"card\">\r\n                            <img src={Searching} className=\"card-img-top\" height=\"157px\" />\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Searching Techniques</h5>\r\n                                <p className=\"card-text\">Implementing and visualizing searching algorithms to find whether an element is present in collection or not.\r\n                                </p>\r\n                                <Link to={\"/searching\"} className={\"btn btn-outline-success\"}>Proceed</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div id=\"footer\" className=\"container1\">\r\n                <h1 style={{\r\n                    fontSize: \"40px\",\r\n                    color: \"#fff\",\r\n                    textAlign:\"center\",\r\n                    paddingTop: \"35px\",\r\n                    paddingBottom: \"35px\",\r\n                    fontWeight: \"bold\"\r\n                }}>Our  <span\r\n                    style={{\r\n                        color: \"#2ed327\"\r\n                    }}>Team</span></h1>\r\n\r\n            </div> */}\r\n            <div id=\"footer\" className={\"teams\"}>\r\n            <h1>\r\n                Our &nbsp;\r\n                <span>Team</span>\r\n            </h1>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 col-12\">\r\n                    <div className=\"teamCard\">\r\n                        <img src={Coding} alt=\"\"/>\r\n                        <h5>Yashi Rathore</h5>\r\n                        <p>\r\n                        I’m Yashi Rathore! I’m a web and mobile app developer, currently pursuing (Btech+Mtech) Integrated in IT from IIPS Davv. \r\n                        Being a tech-enthusiast I love to explore new technologies and use them to solve real-life problems.\r\n                        </p>\r\n                        <div className={\"teamIconWrapper\"}>\r\n                            <a href=\"mailto:yashirathore11@gmail.com\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                                </a>\r\n                            <a href=\"https://github.com/Yashirathore11\">\r\n                            <i className=\"fab fa-github\"></i>\r\n                                </a>\r\n                            <a href=\"https://www.linkedin.com/in/yashi-rathore-70029317b/\">\r\n                            <i className=\"fab fa-linkedin\"></i>\r\n                                </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 col-12\">\r\n                    <div className=\"teamCard\">\r\n                        <img src={Launching} alt=\"\"/>\r\n                        <h5>Priyanshi Bairagi</h5>\r\n                        <p>\r\n                        I’m Priyanshi Bairagi! I’m a front end developer and a creative coder. Currently pursuing Btech+Mtech in IT from davv.\r\n                        </p>\r\n                        <div className={\"teamIconWrapper\"}>\r\n                            <a href=\"mailto:Priyanshibairagi@gmail.com\">\r\n                                <i className=\"fas fa-envelope\"></i>\r\n                            </a>\r\n                            <a href=\"https://github.com/priyanshi-bairagi\">\r\n                                <i className=\"fab fa-github\"></i>\r\n                            </a>\r\n                            <a href=\"https://www.linkedin.com/in/priyanshi-bairagi-0ba177175\">\r\n                                <i className=\"fab fa-linkedin\"></i>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n);\r\n}\r\nexport default Home;\r\n\r\n\r\n","// ## This component includes the buttons for sorting algorithms and also generating new array. ## //\r\n\r\nimport React from \"react\";\r\nimport \"./buttons-holder.styles.css\";\r\n\r\nconst BtnHolder = (props) => {\r\n  return (\r\n    <div className=\"buttons-bar\">\r\n      <button onClick={() => props.generateNewArray()} id=\"reset\">\r\n        Generate New Array\r\n      </button>\r\n      <button\r\n        id=\"bubbleSortButton\"\r\n        onClick={() => props.bubbleSort()}\r\n        className=\"buttonStyle1\"\r\n      >\r\n        Bubble Sort\r\n      </button>\r\n      <button\r\n        id=\"selectionSortButton\"\r\n        onClick={() => props.selectionSort()}\r\n        className=\"buttonStyle2\"\r\n      >\r\n        Selection Sort\r\n      </button>\r\n      <button\r\n        id=\"insertionSortButton\"\r\n        onClick={() => props.insertionSort()}\r\n        className=\"buttonStyle1\"\r\n      >\r\n        Insertion Sort\r\n      </button>\r\n      <button\r\n        id=\"mergeSortButton\"\r\n        onClick={() => props.mergeSort()}\r\n        className=\"buttonStyle2\"\r\n      >\r\n        Merge Sort\r\n      </button>\r\n      <button\r\n        id=\"quickSortButton\"\r\n        onClick={() => props.quickSort()}\r\n        className=\"buttonStyle1\"\r\n      >\r\n        Quick Sort\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default BtnHolder;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RangeSliderComponent = styled.div`\r\n  height: 8%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  transition: visibility 0.3s linear, opacity 0.3s linear;\r\n`;\r\n\r\nexport const ItemComponent = styled.div`\r\n  width: 80%;\r\n  justify-self: center;\r\n  color: white;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ArrayBarRangeSliderComponent = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0.8;\r\n  margin-bottom: 2%;\r\n  border-radius: 50vh;\r\n  /* background-image: linear-gradient(\r\n    to bottom,\r\n    rgba(100, 100, 250, 0.9),\r\n    rgba(100, 100, 250, 0.5),\r\n    rgba(100, 100, 250, 0.9)\r\n  );*/\r\n  background: linear-gradient(to top right, #000 0%, #191919 100%);\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const TextComponent = styled.p`\r\n  color: white;\r\n  font-size: large;\r\n  @media only screen and (max-width: 820px) {\r\n    font-size: small;\r\n  }\r\n\r\n  @media only screen and (max-width: 510px) {\r\n    font-size: x-small;\r\n  }\r\n\r\n  @media only screen and (max-width: 320px) {\r\n    font-size: xx-small;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n/*import styled component */\r\nimport {\r\n  ArrayBarRangeSliderComponent,\r\n  TextComponent,\r\n} from \"./array-bar-range-slider.styles\";\r\n\r\n/*material ui */\r\nimport { Slider, withStyles } from \"@material-ui/core\";\r\n\r\nconst ArrayBarSlider = withStyles({\r\n  root: { color: \"#2ed327\", inlineSize: \"60%\", padding: 10 },\r\n  thumb: {\r\n    height: 12,\r\n    width: 12,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid cyan\",\r\n    marginTop: -4,\r\n    marginLeft: 0,\r\n  },\r\n  active: {},\r\n  track: {\r\n    height: 4,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 4,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nconst ArrayBarRangeSlider = (props) => {\r\n  return (\r\n    <ArrayBarRangeSliderComponent>\r\n      <TextComponent>Array Size</TextComponent>\r\n      <ArrayBarSlider\r\n        id=\"ArrayBarSlider\"\r\n        min={2}\r\n        max={14}\r\n        step={1}\r\n        defaultValue={props.numberOfArrayBars}\r\n        valueLabelDisplay=\"auto\"\r\n        onChange={props.onChangeArrayBarRangeSlider}\r\n      />\r\n    </ArrayBarRangeSliderComponent>\r\n  );\r\n};\r\n\r\nexport default ArrayBarRangeSlider;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AnimationSpeedRangeSliderComponent = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0.8;\r\n  margin-bottom: 2%;\r\n  border-radius: 50vh;\r\n  /* background-image: linear-gradient(\r\n    to bottom,\r\n    rgba(100, 100, 250, 0.9),\r\n    rgba(100, 100, 250, 0.5),\r\n    rgba(100, 100, 250, 0.9)\r\n  ); */\r\n  background: linear-gradient(to top right, #000 0%, #191919 100%);\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\nexport const TextComponent = styled.p`\r\n  color: white;\r\n  font-size: large;\r\n  @media only screen and (max-width: 820px) {\r\n    font-size: small;\r\n  }\r\n\r\n  @media only screen and (max-width: 510px) {\r\n    font-size: x-small;\r\n  }\r\n\r\n  @media only screen and (max-width: 320px) {\r\n    font-size: xx-small;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\n/*import styled component */\r\nimport {\r\n  AnimationSpeedRangeSliderComponent,\r\n  TextComponent,\r\n} from \"./animation-speed-range-slider.styles\";\r\n\r\n/*material ui */\r\nimport { Slider, withStyles } from \"@material-ui/core\";\r\n\r\nconst AnimationSpeedSlider = withStyles({\r\n  root: {\r\n    color: \"#2ed327\",\r\n    inlineSize: \"60%\",\r\n    padding: 10,\r\n  },\r\n  thumb: {\r\n    height: 12,\r\n    width: 12,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid cyan\",\r\n    marginTop: -4,\r\n    marginLeft: 0,\r\n  },\r\n  active: {},\r\n  track: {\r\n    height: 4,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 4,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nconst AnimationSpeedRangeSlider = (props) => {\r\n  return (\r\n    <AnimationSpeedRangeSliderComponent>\r\n      <TextComponent>Animation Speed (ms)</TextComponent>\r\n      <AnimationSpeedSlider\r\n        id=\"animationSpeedSlider\"\r\n        min={10}\r\n        max={200}\r\n        defaultValue={props.animationSpeed}\r\n        valueLabelDisplay=\"auto\"\r\n        onChange={props.onChangeAnimationSpeedRangeSlider}\r\n      />\r\n    </AnimationSpeedRangeSliderComponent>\r\n  );\r\n};\r\n\r\nexport default AnimationSpeedRangeSlider;\r\n","import React from \"react\";\r\n\r\n/*Import Styled Components */\r\nimport { RangeSliderComponent, ItemComponent } from \"./range-slider.styles\";\r\n\r\n/*Import Components */\r\nimport ArrayBarRangeSlider from \"./array-bar-range-slider/array-bar-range-slider.component\";\r\nimport AnimationSpeedRangeSlider from \"./animation-speed-range-slider/animation-speed-range-slider.component\";\r\n\r\nconst RangeSlider = (props) => {\r\n  return (\r\n    <RangeSliderComponent id=\"range-slider\">\r\n      <ItemComponent>\r\n        <ArrayBarRangeSlider\r\n          numberOfArrayBars={props.numberOfArrayBars}\r\n          onChangeArrayBarRangeSlider={props.onChangeArrayBarRangeSlider}\r\n        />\r\n      </ItemComponent>\r\n      <ItemComponent>\r\n        <AnimationSpeedRangeSlider\r\n          animationSpeed={props.animationSpeed}\r\n          onChangeAnimationSpeedRangeSlider={\r\n            props.onChangeAnimationSpeedRangeSlider\r\n          }\r\n        />\r\n      </ItemComponent>\r\n    </RangeSliderComponent>\r\n  );\r\n};\r\n\r\nexport default RangeSlider;\r\n","import React from \"react\";\r\n\r\n// import styles\r\nimport \"./array-bars-holder.styles.css\";\r\n\r\nconst ArrayBarsHolder = (props) => (\r\n  <div className=\"bar-container\">\r\n    {props.array.map((value, idx) => (\r\n      <div className=\"bar\" key={idx}>\r\n        <div className=\"side top\"></div>\r\n        <div className=\"side bottom\"></div>\r\n        <div className=\"side right\">\r\n          <div\r\n            className=\"color-bar right-color-bar\"\r\n            style={{\r\n              height: `${value}vh`,\r\n              transform: `translateY(${70 - value}vh)`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <div className=\"side left\">\r\n          <div\r\n            className=\"color-bar left-color-bar\"\r\n            style={{\r\n              height: `${value}vh`,\r\n              transform: `translateY(${70 - value}vh)`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <div className=\"side front\">\r\n          {props.label === true ? (\r\n            <div style={{ position: \"absolute\", marginLeft: \"1.5vw\" }}>\r\n              {value}\r\n            </div>\r\n          ) : null}\r\n          <div\r\n            className=\"color-bar front-color-bar\"\r\n            style={{\r\n              height: `${value}vh`,\r\n              transform: `translateY(${70 - value}vh)`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <div className=\"side back\">\r\n          <div\r\n            className=\"color-bar back-color-bar\"\r\n            style={{\r\n              height: `${value}vh`,\r\n              transform: `translateY(${70 - value}vh)`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default ArrayBarsHolder;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SortComponent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  /* background-image: linear-gradient(\r\n    to bottom right,\r\n    #265077,\r\n    #022140,\r\n    #494b68,\r\n    #1e4258,\r\n    #2d575d\r\n  ); */\r\n  background: #fff;\r\n`;\r\n","const right_color_bar = document.getElementsByClassName(\"right-color-bar\");\r\nconst left_color_bar = document.getElementsByClassName(\"left-color-bar\");\r\nconst front_color_bar = document.getElementsByClassName(\"front-color-bar\");\r\nconst back_color_bar = document.getElementsByClassName(\"back-color-bar\");\r\nconst bottom_color_bar = document.getElementsByClassName(\"bottom\");\r\n\r\n// ## Helps to easily fetch all the sides of the element ## //\r\nexport function getBarStyle(index) {\r\n  const barStyle = [\r\n    right_color_bar[index].style,\r\n    left_color_bar[index].style,\r\n    back_color_bar[index].style,\r\n    front_color_bar[index].style,\r\n    bottom_color_bar[index].style,\r\n  ];\r\n  return barStyle;\r\n}\r\n\r\n// ## Changes color of all the sides of color-bar ## //\r\nexport function changeBackgroundColor(index, color) {\r\n  const styleOfElement = getBarStyle(index);\r\n  for (let j = 0; j < styleOfElement.length; j++)\r\n    styleOfElement[j].backgroundColor = color;\r\n}\r\n\r\n// ## Changes box-shadow of all the sides of color-bar ## //\r\nexport function changeBoxShadow(index, shadow) {\r\n  const styleOfElement = getBarStyle(index);\r\n  for (let j = 0; j < styleOfElement.length; j++)\r\n    styleOfElement[j].boxShadow = shadow;\r\n}\r\n\r\n// ## Swaps 2 array-bars ( Swapping heights ) ## //\r\nexport function swapBars(index1, index2) {\r\n  const styleOfElement1 = getBarStyle(index1),\r\n    styleOfElement2 = getBarStyle(index2);\r\n  for (let j = 0; j < 4; j++) {\r\n    const tempHeight = styleOfElement1[j].height;\r\n    styleOfElement1[j].height = styleOfElement2[j].height;\r\n    styleOfElement2[j].height = tempHeight;\r\n\r\n    const h1 = parseInt(styleOfElement1[j].height, 10),\r\n      h2 = parseInt(styleOfElement2[j].height, 10);\r\n\r\n    styleOfElement1[j].transform = `translateY(${70 - h1}vh)`;\r\n    styleOfElement2[j].transform = `translateY(${70 - h2}vh)`;\r\n  }\r\n}\r\n\r\n// ## Reset the style of all the color-bars ## //\r\nexport function resetBarStyleDefault(array, animationSpeed) {\r\n  setTimeout(() => {\r\n    for (let j = 0; j < array.length; j++) {\r\n      changeBackgroundColor(j, \"rgba(46, 211, 39, 1)\");\r\n      changeBoxShadow(j, \"5px 5px 50px 5px rgba(46, 211, 39, 0.2)\");\r\n    }\r\n  }, animationSpeed);\r\n}\r\n\r\n// makes all the bars green after the array is sorted\r\nexport function makeAllBarsGreen(array, animationSpeed) {\r\n  setTimeout(() => {\r\n    for (let j = 0; j < array.length; j++) {\r\n      changeBackgroundColor(j, \"rgba(0, 164, 86, 0.6)\");\r\n      changeBoxShadow(j, \"5px 5px 50px 5px rgba(0, 164, 86, 0.2)\");\r\n    }\r\n  }, animationSpeed);\r\n}\r\n\r\n// First write the swap function, which is just a helper function to swap values of the array.\r\nexport function swap(array, i, j) {\r\n  var temp = array[i];\r\n  array[i] = array[j];\r\n  array[j] = temp;\r\n}\r\n\r\n// ## Returns any random value from the interval [min, max] ## //\r\nexport function randomIntFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n/*\r\nWill Add this Feature in the Future\r\n// ## Enables all the buttons ## //\r\nexport function enableButtons() {\r\n  document.getElementById(\"reset\").disabled = false;\r\n  document.getElementById(\"bubbleSortButton\").disabled = false;\r\n  document.getElementById(\"selectionSortButton\").disabled = false;\r\n  document.getElementById(\"insertionSortButton\").disabled = false;\r\n  document.getElementById(\"mergeSortButton\").disabled = false;\r\n  document.getElementById(\"quickSortButton\").disabled = false;\r\n  document.getElementById(\"range-slider\").style.opacity = 1;\r\n  document.getElementById(\"range-slider\").style.visibility = \"visible\";\r\n}\r\n\r\n// ## Disables all the buttons ## //\r\nexport function disableButtons() {\r\n  document.getElementById(\"reset\").disabled = true;\r\n  document.getElementById(\"bubbleSortButton\").disabled = true;\r\n  document.getElementById(\"selectionSortButton\").disabled = true;\r\n  document.getElementById(\"insertionSortButton\").disabled = true;\r\n  document.getElementById(\"mergeSortButton\").disabled = true;\r\n  document.getElementById(\"quickSortButton\").disabled = true;\r\n  document.getElementById(\"range-slider\").style.opacity = 0;\r\n  document.getElementById(\"range-slider\").style.visibility = \"hidden\";\r\n}\r\n\r\n// ## Enables all the search buttons ## //\r\nexport function enableSearchButtons() {\r\n  document.getElementById(\"reset\").disabled = false;\r\n  document.getElementById(\"linearSearchButton\").disabled = false;\r\n  document.getElementById(\"binarySearchButton\").disabled = false;\r\n  document.getElementById(\"SortButton\").disabled = false;\r\n  document.getElementById(\"inputField\").disabled = false;\r\n\r\n  document.getElementById(\"range-slider\").style.opacity = 1;\r\n  document.getElementById(\"range-slider\").style.visibility = \"visible\";\r\n}\r\n\r\n// ## Disables all the search buttons ## //\r\nexport function disableSearchButtons() {\r\n  document.getElementById(\"reset\").disabled = true;\r\n  document.getElementById(\"linearSearchButton\").disabled = true;\r\n  document.getElementById(\"binarySearchButton\").disabled = true;\r\n  document.getElementById(\"SortButton\").disabled = true;\r\n  document.getElementById(\"inputField\").disabled = true;\r\n  document.getElementById(\"range-slider\").style.opacity = 0;\r\n  document.getElementById(\"range-slider\").style.visibility = \"hidden\";\r\n}\r\n*/\r\n","const getBubbleSortAnimations = (array) => {\r\n  const animations = []; // { comparingElement1, comparingElement2, doSwap, isFinalElement, finalElement }\r\n\r\n  for (let i = 0; i < array.length - 1; i++) {\r\n    for (let j = 0; j < array.length - i - 1; j++) {\r\n      // Push animation for comparing 2 elements\r\n      animations.push(j, j + 1, false, false, -1);\r\n      if (array[j] > array[j + 1]) {\r\n        // Swapping values\r\n        [array[j], array[j + 1]] = [array[j + 1], array[j]];\r\n        // Push animation for swapping 2 values\r\n        animations.push(j, j + 1, true, false, -1);\r\n      }\r\n    }\r\n    // Here, the (array.length - 1 - i)th indexed element will be sorted. So we need to change its color.\r\n    // Push animation for (array.length - 1 - i)th indexed element which got its sorted position.\r\n    animations.push(\r\n      array.length - 1 - i,\r\n      array.length - 1 - i,\r\n      false,\r\n      true,\r\n      array.length - 1 - i\r\n    );\r\n  }\r\n  // Push animation to know that it's the end of the animation.\r\n  animations.push(0, 0, false, true, 0);\r\n\r\n  return animations;\r\n};\r\n\r\nexport default getBubbleSortAnimations;\r\n","// import animation array\r\nimport getBubbleSortAnimations from \"./bubble-sort-animation\";\r\n\r\n// import helper Functions\r\nimport {\r\n  changeBackgroundColor,\r\n  changeBoxShadow,\r\n  swapBars,\r\n  resetBarStyleDefault,\r\n} from \"./../../../../helper-functions\";\r\n\r\nconst BubbleSort = (array, animationSpeed) => {\r\n  // Getting the animations which has been generated in the \"getBubbleSortAnimations\" function.\r\n  const animations = getBubbleSortAnimations(array);\r\n\r\n  for (let i = 0; i < animations.length; i += 5) {\r\n    const comparingElement1 = animations[i];\r\n    const comparingElement2 = animations[i + 1];\r\n    const doSwap = animations[i + 2];\r\n    const isFinalElement = animations[i + 3];\r\n    const finalElement = animations[i + 4];\r\n\r\n    // Here, promise has been used to know when to Enable Buttons again after the setTimeout ends.\r\n    const promise1 = new Promise(function (resolve, _) {\r\n      setTimeout(() => {\r\n        // Changing the color-bar of comparing elements.\r\n        changeBackgroundColor(comparingElement1, \"rgba(255,165,0, 0.9)\");\r\n        changeBackgroundColor(comparingElement2, \"rgba(255,165,0, 0.9)\");\r\n\r\n        if (doSwap === true) {\r\n          // Changing the color-bar of elements which has to be swapped.\r\n          changeBackgroundColor(comparingElement1, \"rgba(144,238,144, 0.9)\");\r\n          changeBackgroundColor(comparingElement2, \"rgba(144,238,144, 0.9)\");\r\n          // Actually swapping the elements (heights).\r\n          swapBars(comparingElement1, comparingElement2);\r\n        }\r\n      }, i * animationSpeed);\r\n\r\n      // Resolving the promise after the setTimeout ends.\r\n      resolve();\r\n    });\r\n\r\n    const promise2 = new Promise(function (resolve, _) {\r\n      setTimeout(() => {\r\n        if (isFinalElement === true) {\r\n          // Changing the color-bar of finalElement index which has taken its final sorted position.\r\n          changeBackgroundColor(finalElement, \"rgba(0, 164, 86, 0.6)\");\r\n          changeBoxShadow(\r\n            finalElement,\r\n            \"5px 5px 50px 5px  rgba(0, 164, 86, 0.2)\"\r\n          );\r\n        } else {\r\n          // Changing the color-bar of element which has not taken its final sorted position yet.\r\n          changeBackgroundColor(comparingElement1, \"rgba(225, 0, 120, 0.6)\");\r\n          changeBoxShadow(comparingElement1, \"rgba(225, 0, 120, 0.2)\");\r\n        }\r\n        // From \"getBubbleSortAnimations\" function, we know that the array is sorted when finalElement is 0.\r\n        // Resolving the promise when the finalElement index is 0.\r\n        if (finalElement === 0) resolve();\r\n      }, (i + 5) * animationSpeed);\r\n    });\r\n\r\n    Promise.all([promise1, promise2]);\r\n  }\r\n\r\n  // Resetting the color-bar style to default after the animations end.\r\n  resetBarStyleDefault(array, (animations.length + 5) * animationSpeed);\r\n};\r\n\r\nexport default BubbleSort;\r\n","const getInsertionSortAnimation = (array) => {\r\n  // our animations contain {firstElement,secondElement,doSwap, sortedTill}\r\n  const animations = [];\r\n\r\n  // Push animation for sorting first element.\r\n  animations.push(0, 0, false, 0);\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    const tempValue = array[i];\r\n    let j = i - 1;\r\n    while (j >= 0 && array[j] > tempValue) {\r\n      //swap two values\r\n      [array[j + 1], array[j]] = [array[j], array[j + 1]];\r\n\r\n      // Push animation for comparing 2 elements\r\n      animations.push(j, j + 1, false, i);\r\n\r\n      // Push animation for swapping 2 elements\r\n      animations.push(j, j + 1, true, i);\r\n      j--;\r\n    }\r\n  }\r\n\r\n  // Push animation to know that it's the end of the animations.\r\n  animations.push(array.length - 1, array.length - 1, false, array.length - 1);\r\n\r\n  return animations;\r\n};\r\nexport default getInsertionSortAnimation;\r\n","// import animations array\r\nimport getInsertionSortAnimation from \"./insertion-sort-animation\";\r\n\r\n// import helper functions\r\nimport {\r\n  changeBackgroundColor,\r\n  changeBoxShadow,\r\n  swapBars,\r\n  resetBarStyleDefault,\r\n} from \"./../../../../helper-functions\";\r\n\r\nconst InsertionSort = (array, animationSpeed) => {\r\n  //get the animations\r\n  const animations = getInsertionSortAnimation(array);\r\n\r\n  for (let i = 0; i < animations.length; i += 4) {\r\n    const firstElement = animations[i];\r\n    const secondElement = animations[i + 1];\r\n    const swap = animations[i + 2];\r\n    const sortedTill = animations[i + 3];\r\n\r\n    const promise1 = new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        changeBackgroundColor(firstElement, \"rgba(255,165,0, 0.9)\");\r\n        changeBackgroundColor(secondElement, \"rgba(255,165,0, 0.9)\");\r\n\r\n        if (swap) {\r\n          changeBackgroundColor(firstElement, \"rgba(144,238,144, 0.9)\");\r\n          changeBackgroundColor(secondElement, \"rgba(144,238,144, 0.9)\");\r\n\r\n          // swap heights of bars\r\n          swapBars(firstElement, secondElement);\r\n        }\r\n      }, i * animationSpeed);\r\n      resolve();\r\n    });\r\n\r\n    const promise2 = new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // Change the color-bars of the elements till sortedTill index.\r\n        for (let i = 0; i <= sortedTill; i++) {\r\n          changeBackgroundColor(i, \"rgba(0, 164, 86, 0.6)\");\r\n          changeBoxShadow(i, \"5px 5px 50px 5px rgba(0, 164, 86, 0.2)\");\r\n        }\r\n        // we know that animation ends when first and second elements are the last element\r\n        if (firstElement === secondElement && firstElement === array.length - 1)\r\n          resolve();\r\n      }, (i + 4) * animationSpeed);\r\n    });\r\n\r\n    Promise.all([promise1, promise2]);\r\n  }\r\n\r\n  // Resetting the color-bar style to default after the animations end.\r\n  resetBarStyleDefault(array, (animations.length + 4) * animationSpeed);\r\n};\r\n\r\nexport default InsertionSort;\r\n","const getSelectionSortAnimation = (array) => {\r\n  const animations = []; // {currentElement,comparingElement,minIdx,swap,isFinalElement,finalElement}\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    //push animation for currentElement\r\n    let minIdx = i;\r\n    animations.push(i, i, minIdx, false, false, -1);\r\n\r\n    for (let j = i + 1; j < array.length; j++) {\r\n      // Push animation for (i)th, (j)th and (minIdx)th index elements.\r\n      animations.push(i, j, minIdx, false, false, -1);\r\n      if (array[j] < array[minIdx]) {\r\n        minIdx = j;\r\n\r\n        // Push animation for changing minIdx element.\r\n        animations.push(i, j, minIdx, false, false, -1);\r\n      }\r\n    }\r\n\r\n    if (minIdx !== i) {\r\n      // Swap 2 values.\r\n      [array[i], array[minIdx]] = [array[minIdx], array[i]];\r\n\r\n      // Push animation for swapping (i)th index and (minIdx)th index elements.\r\n      animations.push(i, i, minIdx, true, false, -1);\r\n    }\r\n\r\n    // Here, the (i)th indexed element will be sorted. So we need to change its color.\r\n    animations.push(i, i, i, false, true, i);\r\n  }\r\n  return animations;\r\n};\r\nexport default getSelectionSortAnimation;\r\n","import getSelectionSortAnimations from \"./selection-sort-animation\";\r\nimport {\r\n  changeBackgroundColor,\r\n  changeBoxShadow,\r\n  swapBars,\r\n  resetBarStyleDefault,\r\n} from \"./../../../../helper-functions\";\r\n\r\n// color of currentElement -> black\r\n// color of minIndexElement -> blue\r\n// color of comparingElement -> orange\r\n// color of finalElement -> green\r\n\r\nconst SelectionSort = (array, animationSpeed) => {\r\n  //get animations\r\n  const animations = getSelectionSortAnimations(array);\r\n\r\n  for (let i = 0; i < animations.length; i += 6) {\r\n    const currentElement = animations[i];\r\n    const comparingElement = animations[i + 1];\r\n    const minIndexElement = animations[i + 2];\r\n    const swap = animations[i + 3];\r\n    const isFinalElement = animations[i + 4];\r\n    const finalElement = animations[i + 5];\r\n\r\n    const promise1 = new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        // Change the color-bar of current elements.\r\n        changeBackgroundColor(currentElement, \"rgba(0,0,0, 0.9)\");\r\n        changeBackgroundColor(comparingElement, \"rgba(255,165,0, 0.9)\");\r\n        changeBackgroundColor(minIndexElement, \"rgba(0,0,255, 0.9)\");\r\n\r\n        if (swap) {\r\n          // Change the color-bar of elements which have to be swapped.\r\n          changeBackgroundColor(minIndexElement, \"rgba(144,238,144, 0.9)\");\r\n          changeBackgroundColor(currentElement, \"rgba(144,238,144, 0.9)\");\r\n\r\n          // swap the heights of the elements.\r\n          swapBars(currentElement, minIndexElement);\r\n        }\r\n      }, i * animationSpeed);\r\n      resolve();\r\n    });\r\n\r\n    const promise2 = new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (isFinalElement === true) {\r\n          // Change the color-bar of finalElement index which has taken its final sorted position.\r\n          changeBackgroundColor(finalElement, \"rgba(0, 164, 86, 0.6)\");\r\n          changeBoxShadow(\r\n            finalElement,\r\n            \"5px 5px 50px 5px rgba(0, 164, 86, 0.2)\"\r\n          );\r\n        } else {\r\n          // Change the color-bar of elements which have not taken its final sorted position yet.\r\n          changeBackgroundColor(comparingElement, \"rgba(225, 0, 120, 0.6)\");\r\n          changeBackgroundColor(minIndexElement, \"rgba(225, 0, 120, 0.6)\");\r\n        }\r\n\r\n        // Resolve the promise when the finalElement index is (array.length - 1).\r\n        if (finalElement === array.length - 1) resolve();\r\n      }, (i + 6) * animationSpeed);\r\n    });\r\n\r\n    Promise.all([promise1, promise2]);\r\n  }\r\n  // Reset the color-bar style to default after the animations end.\r\n  resetBarStyleDefault(array, (animations.length + 6) * animationSpeed);\r\n};\r\nexport default SelectionSort;\r\n","function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nexport function doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([i, j]);\r\n\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([i, j]);\r\n\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index i in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      // We overwrite the value at index k in the original array with the\r\n      // value at index j in the auxiliary array.\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([i, i]);\r\n\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([i, i]);\r\n\r\n    // We overwrite the value at index k in the original array with the\r\n    // value at index i in the auxiliary array.\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    // These are the values that we're comparing; we push them once\r\n    // to change their color.\r\n    animations.push([j, j]);\r\n\r\n    // These are the values that we're comparing; we push them a second\r\n    // time to revert their color.\r\n    animations.push([j, j]);\r\n\r\n    // We overwrite the value at index k in the original array with the\r\n    // value at index j in the auxiliary array.\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\nexport default getMergeSortAnimations;\r\n","//import animations\r\nimport getMergeSortAnimations from \"./merge-sort-animations\";\r\n\r\n// import helper functions\r\nimport {\r\n  changeBackgroundColor,\r\n  makeAllBarsGreen,\r\n  resetBarStyleDefault,\r\n  getBarStyle,\r\n} from \"./../../../../helper-functions\";\r\n\r\nconst PRIMARY_COLOR = \"rgba(255,165,0, 0.9)\";\r\nconst SECONDARY_COLOR = \"rgba(144,238,144, 0.9)\";\r\n\r\nconst MergeSort = (array, animationSpeed) => {\r\n  //get the animations\r\n  const animations = getMergeSortAnimations(array);\r\n\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const isColorChange = i % 3 !== 2;\r\n    if (isColorChange) {\r\n      const [firstElement, secondElement] = animations[i];\r\n      const color = i % 3 === 0 ? PRIMARY_COLOR : SECONDARY_COLOR;\r\n\r\n      setTimeout(() => {\r\n        changeBackgroundColor(firstElement, color);\r\n        changeBackgroundColor(secondElement, color);\r\n\r\n        if (i === animations.length - 1) {\r\n          makeAllBarsGreen(array, animationSpeed);\r\n        }\r\n      }, i * animationSpeed);\r\n    } else {\r\n      setTimeout(() => {\r\n        const [firstElement, newHeight] = animations[i];\r\n        const styleOfElement1 = getBarStyle(firstElement);\r\n\r\n        for (let j = 0; j < 4; j++) {\r\n          styleOfElement1[j].height = `${newHeight}vh`;\r\n\r\n          const h1 = parseInt(styleOfElement1[j].height, 10);\r\n\r\n          styleOfElement1[j].transform = `translateY(${70 - h1}vh)`;\r\n        }\r\n      }, i * animationSpeed);\r\n    }\r\n  }\r\n\r\n  // Resetting the color-bar style to default after the animations end.\r\n  resetBarStyleDefault(array, (animations.length + 5) * animationSpeed);\r\n};\r\nexport default MergeSort;\r\n","// import helper functions\r\nimport {\r\n  changeBackgroundColor,\r\n  changeBoxShadow,\r\n  swapBars,\r\n  resetBarStyleDefault,\r\n  swap,\r\n} from \"./../../../../helper-functions\";\r\n\r\n// const COMPAIRING_COLOR = \"rgba(255,165,0, 0.9)\";\r\nconst SWAPPING_COLOR = \"rgba(144,238,144, 0.9)\";\r\nconst SORTED_COLOR = \"rgba(0, 164, 86, 0.6)\";\r\nconst SORTED_SHADOW = \"5px 5px 50px 5px rgba(0, 164, 86, 0.2)\";\r\n\r\nconst QuickSort = async (array, animationSpeed) => {\r\n  await quickSortHelper(array, 0, array.length - 1, animationSpeed);\r\n  resetBarStyleDefault(array, animationSpeed);\r\n};\r\n\r\nconst quickSortHelper = async (array, left, right, animationSpeed) => {\r\n  // left-pointer would be the index of the first element which is 0 and right-pointer would be the index of the last element which would be (length -1).\r\n  if (left < right) {\r\n    let pivot = await partition(array, left, right, animationSpeed);\r\n    await quickSortHelper(array, left, pivot - 1, animationSpeed);\r\n    await quickSortHelper(array, pivot + 1, right, animationSpeed);\r\n  }\r\n};\r\n\r\nasync function partition(array, left, right, animationSpeed) {\r\n  let pivot = array[right]; // pivot\r\n  let pivotIdx = right; // pivotIdx\r\n  let i = left - 1; // Index of smaller element\r\n\r\n  changeBackgroundColor(pivotIdx, \"blue\");\r\n\r\n  await new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, pivotIdx * animationSpeed);\r\n  });\r\n\r\n  for (let j = left; j <= right - 1; j++) {\r\n    // If current element is smaller than or\r\n    // equal to pivot\r\n    if (array[j] <= pivot) {\r\n      i++; // increment index of smaller element\r\n\r\n      changeBackgroundColor(i, SWAPPING_COLOR);\r\n      changeBackgroundColor(j, SWAPPING_COLOR);\r\n      await new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve();\r\n        }, j * animationSpeed);\r\n      });\r\n\r\n      swap(array, i, j);\r\n      swapBars(i, j);\r\n      changeBackgroundColor(i, SORTED_COLOR);\r\n      changeBoxShadow(i, SORTED_SHADOW);\r\n      changeBackgroundColor(j, SORTED_COLOR);\r\n      changeBoxShadow(j, SORTED_SHADOW);\r\n\r\n      await new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve();\r\n        }, j * animationSpeed);\r\n      });\r\n    }\r\n  }\r\n  swap(array, i + 1, right);\r\n  swapBars(i + 1, right);\r\n  changeBackgroundColor(i + 1, SORTED_COLOR);\r\n  changeBoxShadow(i + 1, SORTED_SHADOW);\r\n  changeBackgroundColor(right, SORTED_COLOR);\r\n  changeBoxShadow(right, SORTED_SHADOW);\r\n\r\n  await new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, right * animationSpeed);\r\n  });\r\n\r\n  return i + 1;\r\n}\r\n\r\nexport default QuickSort;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n/* import Components*/\r\nimport BtnHolder from \"../../components/buttons-holder/btnholder.component\";\r\nimport RangeSlider from \"../../components/range-slider/range-slider.component\";\r\nimport ArrayBarsHolder from \"./../../components/array-bars-holder/array-bars-holder.component\";\r\n/*import styled component */\r\nimport { SortComponent } from \"./sort.styles\";\r\n\r\n/*import helper functions */\r\nimport { randomIntFromInterval } from \"./../../helper-functions\";\r\n\r\n/*import Algorithms */\r\nimport BubbleSort from \"./algorithms/bubble-sort/bubble-sort\";\r\nimport InsertionSort from \"./algorithms/insertion-sort/insertion-sort\";\r\nimport SelectionSort from \"./algorithms/selection-sort/selection-sort\";\r\nimport MergeSort from \"./algorithms/merge-sort/merge-sort\";\r\nimport QuickSort from \"./algorithms/quick-sort/quick-sort\";\r\n\r\nconst Sort = () => {\r\n  /* .................................... STATE ..................................... */\r\n  /* here the array holds the elements*/\r\n  const [array, setArray] = useState([]);\r\n\r\n  /* it is the number of elements in the array*/\r\n  const [numberOfElements, setNumberOfElements] = useState(10);\r\n\r\n  /*it is the animation speed used while running the algorithm */\r\n  const [animationSpeed, setAnimationSpeed] = useState(50);\r\n\r\n  /* .................................... Functions ..................................... */\r\n  /*it generates a new array */\r\n  const generateNewArray = () => {\r\n    const newArray = [];\r\n    for (let i = 0; i < numberOfElements; i++) {\r\n      newArray.push(randomIntFromInterval(5, 70));\r\n    }\r\n    setArray(newArray);\r\n  };\r\n\r\n  /* This works like componentDidMount() */\r\n  useEffect(() => {\r\n    generateNewArray();\r\n  }, []);\r\n\r\n  //  This function is called if the \"Array Size\" slider is changed. //\r\n  const onChangeArrayBarRangeSlider = (_, value) => {\r\n    setNumberOfElements(value);\r\n    generateNewArray();\r\n  };\r\n\r\n  //  This function is called if the \"Animation Speed\" slider is changed. //\r\n  const onChangeAnimationSpeedRangeSlider = (_, value) => {\r\n    setAnimationSpeed(value);\r\n  };\r\n\r\n  //  Calls the BubbleSort function.  //\r\n  const bubbleSort = () => {\r\n    BubbleSort(array, animationSpeed);\r\n  };\r\n\r\n  //  Calls the InsertionSort function. //\r\n  const insertionSort = () => {\r\n    InsertionSort(array, animationSpeed);\r\n  };\r\n\r\n  //  Calls the SelectionSort function. //\r\n  const selectionSort = () => {\r\n    SelectionSort(array, animationSpeed);\r\n  };\r\n\r\n  //  Calls the MergeSort function. //\r\n  const mergeSort = () => {\r\n    MergeSort(array, animationSpeed);\r\n  };\r\n\r\n  //  Calls the QuickSort function. //\r\n  const quickSort = () => {\r\n    QuickSort(array, animationSpeed);\r\n  };\r\n  /* ........................... Render Components..................................... */\r\n  return (\r\n    <SortComponent>\r\n    \r\n      <BtnHolder\r\n        generateNewArray={generateNewArray}\r\n        bubbleSort={bubbleSort}\r\n        insertionSort={insertionSort}\r\n        selectionSort={selectionSort}\r\n        mergeSort={mergeSort}\r\n        quickSort={quickSort}\r\n      />\r\n      <ArrayBarsHolder array={array} />\r\n      <RangeSlider\r\n        numberOfArrayBars={numberOfElements}\r\n        animationSpeed={animationSpeed}\r\n        onChangeArrayBarRangeSlider={onChangeArrayBarRangeSlider}\r\n        onChangeAnimationSpeedRangeSlider={onChangeAnimationSpeedRangeSlider}\r\n      />\r\n    </SortComponent>\r\n  );\r\n};\r\n\r\nexport default Sort;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Node extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            isWall,\r\n            isStart,\r\n            isEnd,\r\n            isVisited,\r\n            isShortestPath,\r\n            onMouseDown,\r\n            row,\r\n            col,\r\n            onMouseEnter,\r\n            onMouseUp,\r\n            onMouseLeave\r\n        }=this.props;\r\n        const cName=isStart?\"start\":isEnd?\"end\":isWall?\"wall\":isShortestPath?\"path\":isVisited?\"visited\":\"\";\r\n        return(\r\n            <td className={\"node_\"+cName} \r\n            id={`node-${row}-${col}`}\r\n            onMouseDown={()=>onMouseDown(row,col)}\r\n            onMouseEnter={()=>onMouseEnter(row,col)}\r\n            onMouseUp={()=>onMouseUp()}\r\n            onMouseLeave={()=>onMouseLeave(row,col)}\r\n            // onTouchStart={()=>onMouseDown(row,col)}\r\n            // onTouchEnd={()=>onMouseLeave(row,col)}\r\n            // onTouchMove={()=>onMouseEnter(row,col)}\r\n            ></td>\r\n        )\r\n    }\r\n}\r\nexport default Node;","import PriorityQueue from \"js-priority-queue\";\r\nfunction isInsideGrid(i,j,grid)\r\n    { \r\n        return (i >= 0 && i < grid.length && j >= 0 && j < grid[0].length); \r\n    } \r\nconst dijkstra = (grid, startNode, endNode) => {\r\n    \r\n        let arr=grid;\r\n        let visited_nodes=[];\r\n        let shortestPath=[];\r\n        let start_node=startNode;\r\n        let end_node=endNode;\r\n        let pq=new PriorityQueue({\r\n            comparator:function(a,b){\r\n                return a.distance-b.distance;\r\n            }\r\n        });\r\n        for(let i=0;i<arr.length;i++){\r\n            for(let j=0;j<arr[0].length;j++){\r\n                arr[i][j].distance=Infinity;\r\n                arr[i][j].prevNode=null;\r\n                arr[i][j].isVisited=false;\r\n                arr[i][j].isShortestPath=false;\r\n            }\r\n        }\r\n        arr[start_node[0]][start_node[1]].distance=0;\r\n        pq.queue(arr[start_node[0]][start_node[1]]);\r\n        let dx = [1, 0, -1, 0]; \r\n        let dy = [0, 1, 0, -1]; \r\n        // console.log(set.toArray())\r\n        let limit=0;\r\n        \r\n        while(pq.length){\r\n            let cell=pq.dequeue();\r\n            if(arr[cell.row][cell.col].isVisited)continue;\r\n            arr[cell.row][cell.col].isVisited=true;\r\n            visited_nodes.push(cell);\r\n            let flag=0;\r\n            for(let i=0;i<4;i++){\r\n                let x=cell.row+dx[i];\r\n                let y=cell.col+dy[i];\r\n                if(!isInsideGrid(x,y,arr))continue;\r\n                if(!arr[x][y].isVisited&&(!arr[x][y].isWall||(x==end_node[0]&&y==end_node[1]))){\r\n                    if(x===end_node[0]&&y===end_node[1]){\r\n                        arr[x][y].isVisited=true;\r\n                        arr[x][y].prevNode=arr[cell.row][cell.col];\r\n                        let node=arr[x][y];\r\n                        while (node !== null) {\r\n                            shortestPath.unshift(node);\r\n                            node = node.prevNode;\r\n                            if (node){ node.isShortestPath = true;\r\n                                node.isVisited=false;\r\n                            }\r\n                        }\r\n                        flag=1;\r\n                        break;\r\n                    }\r\n                    const dist = Math.abs(dx[i]) === 1 && Math.abs(dy[i]) === 1 ? 1.4 : 1;\r\n                    if (cell.distance + dist < arr[x][y].distance) {\r\n                        arr[x][y].prevNode = cell;\r\n                        arr[x][y].distance = cell.distance + dist;\r\n                    }\r\n                    pq.queue(arr[x][y]);\r\n                }\r\n                \r\n            }\r\n            if(flag==1)break;\r\n            \r\n            \r\n        }\r\n        return {visited_nodes,shortestPath};\r\n}\r\nexport default dijkstra;","const randomMaze = (grid, startNode, finishNode) => {\r\n    if (!startNode || !finishNode || startNode === finishNode) {\r\n      return false;\r\n    }\r\n    let walls = [];\r\n    for (let row = 0; row < grid.length; row++) {\r\n      for (let col = 0; col < grid[0].length; col++) {\r\n        if ((row === startNode.row && col === startNode.col) || (row === finishNode.row && col === finishNode.col)\r\n        ){\r\n            continue;\r\n        }\r\n        if (Math.random() < 0.33) {\r\n          walls.push([row, col]);\r\n        }\r\n      }\r\n    }\r\n    walls.sort(() => Math.random() - 0.5);\r\n    return walls;\r\n  }\r\n  export default randomMaze;","import React, { Component } from 'react';\r\nimport \"./modal.css\";\r\nclass Instruct extends Component {\r\n  // eslint-disable-next-line\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    \r\n    if(this.props.imageCSS){\r\n      this.section=\"\";\r\n      this.showHideClassName = this.props.show ? this.props.imageCSS+\" display-block\" : this.props.imageCSS+\" display-none\";\r\n    }\r\n    else{\r\n      this.section=\"modal-main\";\r\n      this.showHideClassName = this.props.show ? \"modal display-block\" : \"modal display-none\";\r\n    }\r\n    return (\r\n      <div className={this.showHideClassName}>\r\n        <section className={this.section}>\r\n          {this.props.children}\r\n          \r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default Instruct;","export default __webpack_public_path__ + \"static/media/pathfinder.86ada55a.gif\";","import React, { Component } from \"react\";\r\nimport \"../../styles/Pathfinding.css\";\r\nimport Node from \"./Node\";\r\nimport PriorityQueue from \"js-priority-queue\";\r\nimport Dijkstra from \"./algorithms/Dijkstra\";\r\nimport randomMaze from \"./maze/randomMaze\";\r\nimport Instruct from \"../Instructions/Instruct\";\r\nimport instruct_gif from \"../../assets/pathfinder.gif\";\r\nimport { NavLink } from \"react-router-dom\";\r\nfunction node(row,col,dis){\r\n    return({\r\n        row,\r\n        col,\r\n        dis\r\n    })\r\n}\r\n\r\nclass Pathfinding extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            method:\"Algorithms\",\r\n            grid:[],\r\n            mouseClicked:false,\r\n            mainClicked:\"\",\r\n            start_node:null,\r\n            end_node:null,\r\n            generatingMaze: false,\r\n            mazeSpeed: 10,\r\n            visited:0,\r\n            shortestPath:0,\r\n            number_of_nodes:0,\r\n            algo_info:{\r\n                \"Algorithms\":{\r\n                    text:\"\",\r\n                    url:\"\"\r\n                },\r\n                \"Dijkstra's Algorithm\":{\r\n                    text:\"Dijkstra’s algorithm is very similar to Prim’s algorithm for minimum spanning tree. Like Prim’s MST, we generate a SPT (shortest path tree) with given source as root. We maintain two sets, one set contains vertices included in shortest path tree, other set includes vertices not yet included in shortest path tree. At every step of the algorithm, we find a vertex which is in the other set (set of not yet included) and has a minimum distance from the source.\",\r\n                    url:\"https://www.geeksforgeeks.org/dijkstras-shortest-path-algorithm-greedy-algo-7/\"\r\n                },\r\n                \"A* Search\":{\r\n                    text:\"Informally speaking, A* Search algorithms, unlike other traversal techniques, it has “brains”. What it means is that it is really a smart algorithm which separates it from the other conventional algorithms. This fact is cleared in detail in below sections. And it is also worth mentioning that many games and web-based maps use this algorithm to find the shortest path very efficiently (approximation).\",\r\n                    url:\"https://www.geeksforgeeks.org/a-search-algorithm/\"\r\n                },\r\n                \"Breadth First Search\":{\r\n                    text:\"In Progress\",\r\n                    url:\"https://www.geeksforgeeks.org/a-search-algorithm/\"\r\n                }\r\n            },\r\n            showModal:true\r\n\r\n        }\r\n        this.animating=false;\r\n    }\r\n    \r\n    \r\n    makeGrid=()=>{\r\n        if(this.animating)return;\r\n        let row_size=Math.floor((window.innerHeight-60)/27);\r\n        let col_size=Math.floor((window.innerWidth)/27);\r\n        let arr=[]\r\n        for(let i=0;i<row_size;i++){\r\n            let row=[];\r\n            for(let j=0;j<col_size;j++){\r\n                row.push({\r\n                    value:1,\r\n                    row:i,\r\n                    col:j,\r\n                    isVisited:false,\r\n                    isShortestPath:false,\r\n                    isWall:false,\r\n                    isShortestPath:false\r\n                });\r\n                try{\r\n                document.getElementById(`node-${i}-${j}`).className=\"node_\";\r\n                }catch{\r\n                }\r\n\r\n            }\r\n            arr.push(row);\r\n        }\r\n        let start_x=Math.floor(Math.random()*row_size);\r\n        let start_y=Math.floor(Math.random()*col_size);\r\n        let end_x=Math.floor(Math.random()*row_size);\r\n        let end_y=Math.floor(Math.random()*col_size);\r\n        arr[start_x][start_y].isStart=true;\r\n        arr[end_x][end_y].isEnd=true;\r\n\r\n        this.setState({\r\n            grid:arr,\r\n            start_node:[start_x,start_y],\r\n            end_node:[end_x,end_y],\r\n            number_of_nodes:arr.length*arr[0].length,\r\n            visited:0,\r\n            shortestPath:0\r\n        })\r\n        \r\n    }\r\n    \r\n    \r\n    componentDidMount(){\r\n        this.makeGrid();\r\n        window.addEventListener(\"resize\",(e)=>{\r\n            this.makeGrid();\r\n        })\r\n    }\r\n    handleMouseDown=(row,col)=>{\r\n        if(this.animating)return;\r\n        let arr=this.state.grid;\r\n        if(arr[row][col].isStart){\r\n            this.setState({\r\n                mainClicked:\"start\"\r\n            })\r\n        }\r\n        else if(arr[row][col].isEnd){\r\n            this.setState({\r\n                mainClicked:\"end\"\r\n            })\r\n        }\r\n        if(!arr[row][col].isWall&&!arr[row][col].isStart&&!arr[row][col].isEnd)\r\n            arr[row][col].isWall=true;\r\n        else if(arr[row][col].isWall){\r\n            arr[row][col].isWall=false;\r\n        }\r\n        this.setState({\r\n            grid:arr,\r\n            mouseClicked:true\r\n        })\r\n    }\r\n    handleMouseEnter=(row,col)=>{\r\n        if(this.animating)return;\r\n        if(this.state.mouseClicked){\r\n            let arr=this.state.grid;\r\n            if(this.state.mainClicked==\"start\"){\r\n                arr[row][col].isStart=true;\r\n                this.setState({\r\n                    start_node:[row,col]\r\n                })\r\n            }\r\n            else if(this.state.mainClicked==\"end\"){\r\n                arr[row][col].isEnd=true;\r\n                this.setState({\r\n                    end_node:[row,col]\r\n                })\r\n            }\r\n            else if(!arr[row][col].isWall&&!arr[row][col].isStart&&!arr[row][col].isEnd)\r\n                arr[row][col].isWall=true;\r\n            else if(arr[row][col].isWall){\r\n                arr[row][col].isWall=false;\r\n            }\r\n            this.setState({\r\n                grid:arr,\r\n                mouseClicked:true\r\n            })\r\n        }\r\n        \r\n    }\r\n    handleMouseLeave=(row,col)=>{\r\n        if(this.animating)return;\r\n        let arr=this.state.grid;\r\n        if(this.state.mainClicked!=\"\"){\r\n            arr[row][col].isStart=0;\r\n            arr[row][col].isEnd=0;\r\n            this.setState({\r\n                grid:arr\r\n            })\r\n        }\r\n        \r\n    }\r\n    handleMouseUp=()=>{\r\n\r\n        if(this.animating)return;\r\n        this.setState({\r\n            mouseClicked:false,\r\n            mainClicked:\"\"\r\n        })\r\n    }\r\n    isInsideGrid=(i,j) =>\r\n    { \r\n        return (i >= 0 && i < this.state.grid.length && j >= 0 && j < this.state.grid[0].length); \r\n    }\r\n    \r\n     GridWithMaze = (grid, walls) => {\r\n        let newGrid = grid.slice();\r\n        for (let wall of walls) {\r\n          let node = grid[wall[0]][wall[1]];\r\n          let newNode = {\r\n            ...node,\r\n            isWall: true,\r\n          };\r\n          newGrid[wall[0]][wall[1]] = newNode;\r\n        }\r\n        return newGrid;\r\n      };\r\n    \r\n    animateMaze = (walls) => {\r\n        for (let i = 0; i <= walls.length; i++) {\r\n          if (i === walls.length) {\r\n            // eslint-disable-next-line no-loop-func\r\n            setTimeout(() => {\r\n                this.makeGrid();\r\n                let newGrid = this.GridWithMaze(this.state.grid,walls);\r\n                this.setState({ grid: newGrid});\r\n            }, i * this.state.mazeSpeed);\r\n            return;\r\n          }\r\n          let wall = walls[i];\r\n          let node = this.state.grid[wall[0]][wall[1]];\r\n          setTimeout(() => {\r\n            //Walls\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              \"node node-wall-animated\";\r\n          }, i * this.state.mazeSpeed);\r\n        }\r\n      }; \r\n    generateRandomMaze=(e)=>{\r\n        // if (this.animating || this.state.generatingMaze) {\r\n        //   return;\r\n        // }\r\n        e.preventDefault();\r\n        this.setState({ generatingMaze: true });\r\n        setTimeout(() => {\r\n          const walls = randomMaze(this.state.grid,this.state.start_node,this.state.end_node);\r\n          this.animateMaze(walls);\r\n        }, this.state.mazeSpeed);\r\n      }\r\n    \r\n    dijkshtra=(e)=>{\r\n        e.preventDefault();\r\n        if(this.animating)return;\r\n        let arr=this.state.grid;\r\n        for(let i=0;i<arr.length;i++){\r\n            for(let j=0;j<arr[0].length;j++){\r\n                if(document.getElementById(`node-${i}-${j}`).className==\"node_path\")\r\n                    document.getElementById(`node-${i}-${j}`).className=\"node_\";\r\n                if(document.getElementById(`node-${i}-${j}`).className==\"node_visited\"){\r\n                    document.getElementById(`node-${i}-${j}`).className=\"node_\";\r\n                }\r\n            }\r\n        }\r\n    \r\n        let {visited_nodes,shortestPath}=Dijkstra(this.state.grid,this.state.start_node,this.state.end_node)\r\n        \r\n        const animate=async ()=>{\r\n            \r\n        let i=0;\r\n        let j=0;\r\n        this.animating=true;\r\n        const animateVisited=()=>{\r\n            if(i==visited_nodes.length){\r\n                requestAnimationFrame(animatePath);\r\n                return;\r\n            }\r\n            arr[visited_nodes[i].row][visited_nodes[i].col].isVisited=true;\r\n            // this.setState({\r\n            //     grid:arr\r\n            // })\r\n            if(!arr[visited_nodes[i].row][visited_nodes[i].col].isStart&&!arr[visited_nodes[i].row][visited_nodes[i].col].isEnd)\r\n            document.getElementById(`node-${visited_nodes[i].row}-${visited_nodes[i].col}`).className=\"node_visited\";\r\n            ++i;\r\n            requestAnimationFrame(animateVisited);\r\n            // setTimeout(() => {\r\n                \r\n            //   }, 1000 / 1000);\r\n        }\r\n        \r\n        const animatePath=()=>{\r\n            if(j==shortestPath.length){\r\n                this.setState({\r\n                    grid:arr,\r\n                    visited:visited_nodes.length,\r\n                    shortestPath:shortestPath.length\r\n                })\r\n                this.animating=false;\r\n                return;\r\n            }\r\n            arr[shortestPath[j].row][shortestPath[j].col].isShortestPath=true;\r\n            \r\n            if(!arr[shortestPath[j].row][shortestPath[j].col].isStart&&!arr[shortestPath[j].row][shortestPath[j].col].isEnd)\r\n            document.getElementById(`node-${shortestPath[j].row}-${shortestPath[j].col}`).className=\"node_path\";\r\n            ++j;\r\n            \r\n            requestAnimationFrame(animatePath);\r\n        }\r\n        await requestAnimationFrame(animateVisited);\r\n    }\r\n    animate().then(()=>{\r\n        \r\n    });\r\n    }\r\n    toggleChat=()=>{\r\n        var chatBody = document.getElementById(\"info-body\");\r\n        if(chatBody.style.display=='none') {\r\n            \r\n            chatBody.style.display = 'block';\r\n            return;\r\n        } else {\r\n            \r\n            chatBody.style.display = 'none';\r\n            return;\r\n        }\r\n    }\r\n    showModal = () => {\r\n        this.setState({ \r\n                showModal: true\r\n            });\r\n      };\r\n    \r\n    hideModal = () => {\r\n    this.setState({ showModal: false });\r\n    };\r\n    // componentDidUpdate(){\r\n    //     let method=this.state.method\r\n    //     if(method!=\"Algorithms\"){\r\n    //         document.getElementById(\"info-btn\").style.display=\"block\";\r\n    //     }\r\n    // }\r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n                <nav class=\"navbar navbar-expand-lg navbar-dark headerColor\">\r\n                    <a class=\"navbar-brand navColor\" href=\"#\">Pathfinding Visualizer</a>\r\n                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul class=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                        <NavLink exact to=\"/\" className=\"nav-link\">Home</NavLink>\r\n                        </li>\r\n                        <li class=\"nav-item dropdown\">\r\n                            <a class=\"nav-link dropdown-toggle \" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            {this.state.method}\r\n                            </a>\r\n                            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <a class=\"dropdown-item\" href=\"#\" onClick={()=>this.setState({method:\"Dijkstra's Algorithm\"})}>Dijkstra's Algorithm</a>\r\n                                {/* <a class=\"dropdown-item\" href=\"#\" onClick={()=>this.setState({method:\"A* Search\"})}>A* Search</a> */}\r\n                                {/* <a class=\"dropdown-item\" href=\"#\" onClick={()=>this.setState({method:\"Breath First Search\"})}>Breath First Search</a> */}\r\n                            </div>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#\" onClick={()=>this.makeGrid()}>Clear <span class=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" onClick={this.showModal}>Instructions <span className=\"sr-only\" >(current)</span></a>\r\n                        </li> */}\r\n                        <li className=\"nav-item\" style={{marginLeft:\"10px\",minWidth:\"120px\"}}>\r\n                            <div style={{textAlign:\"center\"}}>\r\n                            <div className=\"progress-text\">Visited Nodes</div>\r\n                            <div class=\"c\">{this.state.visited}</div>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item\" style={{marginLeft:\"10px\",minWidth:\"120px\"}}>\r\n                            <div style={{textAlign:\"center\"}}>\r\n                            <div className=\"progress-text\">Shortest Path</div>\r\n                            <div class=\"c\">{this.state.shortestPath}</div>\r\n                            </div>\r\n                        </li>\r\n                        <div id=\"error\" class=\"alert alert-danger\" style={{marginLeft:\"10px\",display:\"none\"}} role=\"alert\">\r\n                            Select an algorithm first!\r\n                        </div>\r\n                        </ul>\r\n                        <form class=\"form-inline my-2 my-lg-0\">\r\n                        <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\" onClick={this.generateRandomMaze}>Random Maze</button>\r\n                        </form>\r\n                        <form class=\"form-inline my-2 my-lg-0\">\r\n                        <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\" onClick={this.dijkshtra}>Visualize!</button>\r\n                        </form>\r\n                    </div>\r\n                    </nav>\r\n                    <table>\r\n                        {\r\n                        this.state.grid.map((row,index)=>{\r\n                            return(\r\n                                <tr style={{display:\"table-row\"}}>\r\n                                    {\r\n                                        row.map((element,i)=>{\r\n                                            return(\r\n                                                <Node \r\n                                                value={element}\r\n                                                isWall={element.isWall}\r\n                                                isStart={element.isStart}\r\n                                                isEnd={element.isEnd}\r\n                                                isVisited={element.isVisited}\r\n                                                isShortestPath={element.isShortestPath}\r\n                                                key={i}\r\n                                                row={index}\r\n                                                col={i}\r\n                                                onMouseDown={(row,col)=>this.handleMouseDown(row,col)}\r\n                                                onMouseEnter={(row,col)=>this.handleMouseEnter(row,col)}\r\n                                                onMouseUp={()=>this.handleMouseUp()}\r\n                                                onMouseLeave={(row,col)=>this.handleMouseLeave(row,col)}\r\n                                                />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            )\r\n                        })\r\n                        }\r\n                    </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pathfinding;","// ## This component includes the buttons for searching algorithms and also generating new array. ## //\r\n\r\nimport React from \"react\";\r\nimport \"./search-buttons-holder.styles.css\";\r\n\r\n// import { TextField, withStyles } from \"@material-ui/core\";\r\n\r\n// const StyledTextField = withStyles({\r\n//   root: {\r\n//     marginBottom: \"1.2%\",\r\n//   },\r\n// })(TextField);\r\n\r\nconst BtnHolder = (props) => {\r\n  return (\r\n    <div className=\"buttons-bar\">\r\n      <button onClick={() => props.generateNewArray()} id=\"reset\">\r\n        Generate New Array\r\n      </button>\r\n      <button\r\n        id=\"linearSearchButton\"\r\n        onClick={() => props.linearSearch()}\r\n        className=\"buttonStyle1\"\r\n      >\r\n        Linear Search\r\n      </button>\r\n      <button\r\n        id=\"binarySearchButton\"\r\n        onClick={() => props.binarySearch()}\r\n        className=\"buttonStyle2\"\r\n      >\r\n        Binary Search\r\n      </button>\r\n\r\n      <button\r\n        id=\"SortButton\"\r\n        onClick={() => props.sortArray()}\r\n        className=\"buttonStyle1\"\r\n      >\r\n        Sort The Array!\r\n      </button>\r\n      <div class=\"input-field\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Target\"\r\n          onChange={props.handleTargetChange}\r\n        />\r\n      </div>\r\n      {/*<StyledTextField\r\n        id=\"inputField\"\r\n        label=\"Enter a target value\"\r\n        size=\"medium\"\r\n        type=\"number\"\r\n        onChange={props.handleTargetChange}\r\n        // defaultValue={props.target}\r\n        // required={true}\r\n        className=\"input-field\"\r\n      />*/}\r\n    </div>\r\n  );\r\n};\r\nexport default BtnHolder;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchComponent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  /* background-image: linear-gradient(\r\n    to bottom right,\r\n    #265077,\r\n    #022140,\r\n    #494b68,\r\n    #1e4258,\r\n    #2d575d\r\n  ); */\r\n  background: #ffffff;\r\n`;\r\n","// import helper functions\r\nimport {\r\n  changeBackgroundColor,\r\n  changeBoxShadow,\r\n  resetBarStyleDefault,\r\n} from \"./../../../helper-functions\";\r\n\r\nconst COMPAIRING_COLOR = \"rgba(255,165,0, 0.9)\";\r\nconst TARGET_COLOR = \"rgba(0, 164, 86, 0.6)\";\r\nconst TARGET_SHADOW = \"5px 5px 50px 5px rgba(0, 164, 86, 0.2)\";\r\n\r\nexport const LinearSearch = async (array, animationSpeed, target) => {\r\n  const idx = await linearSearchHelper(array, animationSpeed, target);\r\n  //after searching is done\r\n  resetBarStyleDefault(array, animationSpeed);\r\n  //TODO Display popup\r\n  idx !== -1\r\n    ? alert(`${target} found at index ${idx + 1}!`)\r\n    : alert(`${target} not found!`);\r\n};\r\n\r\nconst linearSearchHelper = async (array, animationSpeed, target) => {\r\n  for (let i = 0; i < array.length; i++) {\r\n    const currentElement = array[i];\r\n\r\n    //change background color for comparing\r\n    changeBackgroundColor(i, COMPAIRING_COLOR);\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(resolve, (i + 20) * animationSpeed);\r\n    });\r\n\r\n    if (currentElement === target) {\r\n      //change background color to green because we found our target value;\r\n      changeBackgroundColor(i, TARGET_COLOR);\r\n      changeBoxShadow(i, TARGET_SHADOW);\r\n\r\n      await new Promise((resolve) => {\r\n        setTimeout(resolve, (i + 20) * animationSpeed);\r\n      });\r\n\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n};\r\n","// import helper functions\r\nimport {\r\n  changeBackgroundColor,\r\n  changeBoxShadow,\r\n  resetBarStyleDefault,\r\n} from \"./../../../helper-functions\";\r\n\r\nconst COMPAIRING_COLOR = \"rgba(255,165,0, 0.9)\";\r\nconst REVERT_COLOR = \"rgba(225, 0, 120, 0.5)\";\r\n\r\nconst BOUNDARY_COLOR = \"blue\";\r\nconst TARGET_COLOR = \"rgba(0, 164, 86, 0.6)\";\r\nconst TARGET_SHADOW = \"5px 5px 50px 5px rgba(0, 164, 86, 0.2)\";\r\n\r\nexport const BinarySearch = async (array, animationSpeed, target) => {\r\n  const idx = await binarySearchHelper(array, animationSpeed, target);\r\n  //after searching is done\r\n  resetBarStyleDefault(array, animationSpeed);\r\n\r\n  //TODO Display popup\r\n  idx !== -1\r\n    ? alert(`${target} found at index ${idx + 1}!`)\r\n    : alert(`${target} not found!`);\r\n};\r\n\r\nasync function binarySearchHelper(array, animationSpeed, target) {\r\n  let low = 0,\r\n    prevLow;\r\n  let high = array.length - 1,\r\n    prevHigh;\r\n\r\n  while (low <= high) {\r\n    let mid = (low + high) >> 1;\r\n    const currentElement = array[mid];\r\n    prevLow = low;\r\n    prevHigh = high;\r\n    //change background color for comparing\r\n    changeBackgroundColor(low, BOUNDARY_COLOR);\r\n    changeBackgroundColor(high, BOUNDARY_COLOR);\r\n    changeBackgroundColor(mid, COMPAIRING_COLOR);\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(resolve, (low + 20) * animationSpeed);\r\n    });\r\n\r\n    if (currentElement === target) {\r\n      //change background color to green because we found our target value;\r\n      changeBackgroundColor(mid, TARGET_COLOR);\r\n      changeBoxShadow(mid, TARGET_SHADOW);\r\n\r\n      await new Promise((resolve) => {\r\n        setTimeout(resolve, (low + 20) * animationSpeed);\r\n      });\r\n\r\n      return mid;\r\n    } else if (currentElement > target) {\r\n      high = mid - 1;\r\n    } else low = mid + 1;\r\n\r\n    changeBackgroundColor(prevLow, REVERT_COLOR);\r\n    changeBackgroundColor(prevHigh, REVERT_COLOR);\r\n    changeBackgroundColor(mid, REVERT_COLOR);\r\n\r\n    await new Promise((resolve) => {\r\n      setTimeout(resolve, (low + 20) * animationSpeed);\r\n    });\r\n  }\r\n  return -1;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\n/* import Components*/\r\n// import Header from \"./../../components/header/header.component\";\r\nimport BtnHolder from \"../search-buttons-holder/search-buttons-holder.component\";\r\nimport RangeSlider from \"../range-slider/range-slider.component\";\r\nimport ArrayBarsHolder from \"../array-bars-holder/array-bars-holder.component\";\r\n\r\n/*import styled component */\r\nimport { SearchComponent } from \"./search.styles\";\r\n\r\n\r\n/*import helper functions */\r\nimport { randomIntFromInterval } from \"../../helper-functions\";\r\n\r\n/* import algorithms */\r\nimport { LinearSearch } from \"./algorithms/linear-search\";\r\nimport { BinarySearch } from \"./algorithms/binary-search\";\r\n\r\nconst Search = () => {\r\n  /* .................................... STATE ..................................... */\r\n  /* here the array holds the elements*/\r\n  const [array, setArray] = useState([]);\r\n\r\n  /* it is the number of elements in the array*/\r\n  const [numberOfElements, setNumberOfElements] = useState(10);\r\n\r\n  /*it is the animation speed used while running the algorithm */\r\n  const [animationSpeed, setAnimationSpeed] = useState(50);\r\n\r\n  const [target, setTarget] = useState(\"\");\r\n  /* .................................... Functions ..................................... */\r\n  /*it generates a new array */\r\n  const generateNewArray = () => {\r\n    //making sure there are no duplicate values\r\n    const dict = new Set();\r\n    const newArray = [];\r\n    for (let i = 0; i < numberOfElements; i++) {\r\n      let val = randomIntFromInterval(5, 70);\r\n      while (dict.has(val)) {\r\n        val = randomIntFromInterval(5, 70);\r\n      }\r\n      newArray.push(val);\r\n      dict.add(val);\r\n    }\r\n    setArray(newArray);\r\n  };\r\n\r\n  /* This works like componentDidMount() */\r\n  useEffect(() => {\r\n    generateNewArray();\r\n  }, []);\r\n\r\n  /*It sorts the current array */\r\n  const sortArray = () => {\r\n    const newArray = [];\r\n    const auxiliaryArray = [...array];\r\n    auxiliaryArray.sort((a, b) => a - b);\r\n    for (let i = 0; i < numberOfElements; i++) {\r\n      newArray.push(auxiliaryArray[i]);\r\n    }\r\n    setArray(newArray);\r\n  };\r\n  //  This function is called if the \"Array Size\" slider is changed. //\r\n  const onChangeArrayBarRangeSlider = (_, value) => {\r\n    setNumberOfElements(value);\r\n    generateNewArray();\r\n  };\r\n\r\n  //  This function is called if the \"Animation Speed\" slider is changed. //\r\n  const onChangeAnimationSpeedRangeSlider = (_, value) => {\r\n    setAnimationSpeed(value);\r\n  };\r\n\r\n  //  This function is called if the \"Target\" value is changed. //\r\n  const handleTargetChange = (event) => {\r\n    setTarget(Number(event.target.value));\r\n  };\r\n\r\n  //  This function is called to perform Linear Search. //\r\n  const linearSearch = () => {\r\n    if (target === \"\") {\r\n      alert(\"please enter a target value!\");\r\n      return;\r\n    }\r\n    LinearSearch(array, animationSpeed, target);\r\n  };\r\n\r\n  //  This function is called to perform Binary Search. //\r\n  const binarySearch = () => {\r\n    //If target is invalid\r\n    if (target === \"\") {\r\n      alert(\"please enter a target value!\");\r\n      return;\r\n    }\r\n\r\n    //If array is not sorted\r\n    if (!isSorted(array)) {\r\n      alert(\"please sort the array before doing binary search!\");\r\n      return;\r\n    }\r\n\r\n    BinarySearch(array, animationSpeed, target);\r\n  };\r\n\r\n  // It returns true if array is sorted else false\r\n  function isSorted(array) {\r\n    for (let i = 0; i < array.length - 1; i++) {\r\n      if (array[i] > array[i + 1]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  /* ........................... Render Components..................................... */\r\n  return (\r\n    <SearchComponent>\r\n      <BtnHolder\r\n        generateNewArray={generateNewArray}\r\n        handleTargetChange={handleTargetChange}\r\n        linearSearch={linearSearch}\r\n        binarySearch={binarySearch}\r\n        sortArray={sortArray}\r\n      />\r\n      <ArrayBarsHolder array={array} label={true} />\r\n      <RangeSlider\r\n        numberOfArrayBars={numberOfElements}\r\n        animationSpeed={animationSpeed}\r\n        onChangeArrayBarRangeSlider={onChangeArrayBarRangeSlider}\r\n        onChangeAnimationSpeedRangeSlider={onChangeAnimationSpeedRangeSlider}\r\n      />\r\n    </SearchComponent>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Terminal from 'terminal-js-emulator';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Cli = () =>{\r\n    useEffect(()=>{\r\n        let t1 = new Terminal('terminal');\r\n        const date = new Date();\r\n        // t1.setHeight(\"100vh\");\r\n        t1.setTextColor(\"#2ed327\");\r\n        t1.print('> Your session started at ' + date.toDateString() + ' ' + date.toLocaleTimeString());\r\n        t1.print(\"> Welcome to the terminal of Visualgo !\");\r\n        t1.print(\"> Know about various algorithms here !\");\r\n        t1.print(\"_________________________________________________________\");\r\n        t1.print('Enter `Algorithms` to see the available Algorithm Commands :');\r\n        t1.input('', command => {\r\n            handleCommand(command, t1);\r\n        });  \r\n    },[]);\r\n\r\n    const handleCommand = (command, t1) => {\r\n        if (command === \"Algorithms\") {\r\n            callAlgorithms(t1);\r\n        } \r\n        else if (command === \"Bubble Sort\") {\r\n            t1.print(\"================ Bubble Sort ================\");\r\n            callBubble(t1);\r\n        } \r\n        else if (command === \"Selection Sort\") {\r\n            t1.print(\"================ Selection Sort ================\");\r\n            callSelection(t1);\r\n        } \r\n        else if (command === \"Insertion Sort\") {\r\n            t1.print(\"================ Insertion Sort ================\");\r\n            callInsertion(t1);\r\n        }\r\n        else if (command === \"Merge Sort\") {\r\n            t1.print(\"================ Merge Sort ================\");\r\n            callMerge(t1);\r\n        }\r\n        else if (command === \"Quick Sort\") {\r\n            t1.print(\"================ Quick Sort ================\");\r\n            callQuick(t1);\r\n        }\r\n        else if (command === \"Djisktra\") {\r\n            t1.print(\"================ Djisktra Pathfinding ================\");\r\n            callDjisktra(t1);\r\n        }\r\n        else if (command === \"Linear Search\") {\r\n            t1.print(\"================ Linear Search ================\");\r\n            callLinear(t1);\r\n        }\r\n        else if (command === \"Binary Search\") {\r\n            t1.print(\"================ Binary Search ================\");\r\n            callBinary(t1);\r\n        }\r\n        else {\r\n            t1.print(command +\" is not a right command\");\r\n        }\r\n        t1.input('', command => {\r\n            handleCommand(command, t1);\r\n        });\r\n    }\r\n\r\n    //functions\r\n    const callAlgorithms = (t1) =>{\r\n         t1.print(\"$ Commands Available For Algorithms : \");\r\n         t1.print(\"> Bubble Sort\");\r\n         t1.print(\"> Selection Sort\");\r\n         t1.print(\"> Insertion Sort\");\r\n         t1.print(\"> Merge Sort\");\r\n         t1.print(\"> Quick Sort\");\r\n         t1.print(\"> Djisktra\");\r\n         t1.print(\"> Linear Search\");\r\n         t1.print(\"> Binary Search\");\r\n    }\r\n\r\n    const callBubble = (t1) =>{\r\n         t1.print(\"> Bubble sort is a sorting algorithm that compares two adjacent elements and swaps them until they are not in the intended order.\");\r\n         t1.print(\"==>Time Complexity : Best O(n), Worst O(n*n), Average O(n*n)\");     \r\n         t1.print(\"Used if :\");\r\n         t1.print(\"#complexity does not matter\");\r\n         t1.print(\"#short and simple code is preferred\");\r\n    }\r\n\r\n    const callSelection = (t1) =>{\r\n        t1.print(\"> Selection sort is a sorting algorithm that selects the smallest element from an unsorted list in each iteration\");\r\n        t1.print(\"> and places that element at the beginning of the unsorted list.\");\r\n        t1.print(\"==>Time Complexity : Best O(n*n), Worst O(n*n), Average O(n*n)\");     \r\n        t1.print(\"Used if :\");\r\n        t1.print(\"#a small list is to be sorted\");\r\n        t1.print(\"#cost of swapping does not matter\");\r\n   }\r\n   \r\n   const callMerge = (t1) =>{\r\n    t1.print(\"> Merge Sort is based on the principle of Divide and Conquer Algorithm.\");\r\n    t1.print(\"> Merge sort first divides the array into equal halves and then combines them in a sorted manner.\");\r\n    t1.print(\"==>Time Complexity : Best O(n*log n), Worst O(n*log n), Average O(n*log n)\");     \r\n    t1.print(\"Used if :\");\r\n    t1.print(\"#inversion count problem\");\r\n    t1.print(\"#external sorting\");\r\n   }\r\n     \r\n   const callInsertion = (t1) =>{\r\n    t1.print(\"> Insertion sort is a sorting algorithm that places an unsorted element at its suitable place in each iteration.\");\r\n    t1.print(\"==>Time Complexity : Best O(n), Worst O(n*n), Average O(n*n)\");     \r\n    t1.print(\"Used if :\");\r\n    t1.print(\"#the array is has a small number of elements\");\r\n    t1.print(\"#there are only a few elements left to be sorted\");\r\n}\r\n\r\nconst callQuick = (t1) =>{\r\n    t1.print(\"> Quicksort is a sorting algorithm based on the divide and conquer approach,\");\r\n    t1.print(\"Merge sort first divides the array into equal halves and then combines them in a sorted manner.\");\r\n    t1.print(\"==>Best O(n*log n), Worst O(n*n), Average O(n*log n)\");     \r\n    t1.print(\"Used if :\");\r\n    t1.print(\"#the programming language is good for recursion\");\r\n}\r\n\r\nconst callDjisktra = (t1) =>{\r\n    t1.print(\"> Dijkstra's algorithm allows us to find the shortest path between any two vertices of a graph.\");\r\n    t1.print(\"==>Time Complexity : Best O(n), Worst O(n*n), Average O(n*n)\");     \r\n    t1.print(\"Used if :\");\r\n    t1.print(\"#complexity does not matter\");\r\n    t1.print(\"#short and simple code is preferred\");\r\n}\r\n\r\nconst callLinear = (t1) =>{\r\n    t1.print(\"A sequential search is made over all items one by one.\");\r\n    t1.print(\"Every item is checked and if a match is found then that particular item is returned,\");\r\n    t1.print(\"otherwise the search continues till the end of the data collection.\");\r\n    t1.print(\"Time Complexity : Best O(1), Worst O(n), Average O(n)\");\r\n}\r\n\r\nconst callBinary = (t1) =>{\r\n    t1.print(\">Search a sorted array by repeatedly dividing the search interval in half. Begin with an interval covering the whole array.\");\r\n    t1.print(\">If the value of the search key is less than the item in the middle of the interval, narrow the interval to the lower half.\");\r\n    t1.print(\">Otherwise, narrow it to the upper half. Repeatedly check until the value is found or the interval is empty.\");\r\n    t1.print(\"==>Time Complexity : Best O(1), Worst O(log n), Average O(log n)\");\r\n}\r\n\r\n    return(\r\n        <React.Fragment>\r\n      <div className={\"cli\"}>\r\n      <div id=\"terminal\"></div>\r\n      {/* <button style=\"position: absolute; top: 10px; right: 10px\" onclick=\"switchMode()\">3D Mode</button> */}\r\n      <Link to={\"/\"} className={\"btn btn-success\"}>Home</Link>\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n}\r\nexport default Cli;\r\n","import React from 'react';\r\nimport { Route, Switch, Link, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { HashRouter } from 'react-router-dom'\r\nimport Home from \"./components/Home\";\r\nimport Sorting from \"./components/Sorting/sort.component\";\r\nimport Pathfinding from \"./components/pathfindingVisualizer/Pathfinding\";\r\nimport Searching from \"./components/Searching/search.component\";\r\nimport Cli from \"./components/Cli/Cli\";\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n          <Router basename=\"/Visualgo\">\r\n              <HashRouter hashType={'noslash'}>\r\n              <div>\r\n                  <Switch>\r\n                      <Route path=\"/pathfinding\">\r\n                          <Pathfinding/>\r\n                      </Route>\r\n                      <Route path=\"/sorting\">\r\n                          <Sorting/>\r\n                      </Route>\r\n                      <Route path=\"/searching\">\r\n                          <Searching/>\r\n                      </Route>\r\n                      <Route path=\"/cli\">\r\n                          <Cli/>\r\n                      </Route>\r\n                      <Route path=\"/\">\r\n                          <Home/>\r\n                      </Route>\r\n\r\n                  </Switch>\r\n              </div>\r\n              </HashRouter>\r\n          </Router>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}